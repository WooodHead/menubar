{"componentChunkName":"component---src-components-post-tsx","path":"/accessing-redis-on-an-aws-ec2-instance-from-the-outside","result":{"pageContext":{"post":{"id":"cjklurup00k0201739mflg9sz","title":"Accessing Redis on an Aws EC2 Instance from the Outside\t","slug":"accessing-redis-on-an-aws-ec2-instance-from-the-outside","published_at":"2018-08-09T02:38:23.313","created_at":"2018-08-09T00:57:22","encoded_html":"PHA+QVdTIHJlc291cmNlcyBhcmUgc2VjdXJlIGJ5IGRlZmF1bHQgd2hpY2ggaXMgYSBnb29kIHRoaW5nLiBIb3dldmVyLCB3aGF0IGhhcHBlbnMgd2hlbiB5b3Ugd2FudCB0byBvcGVuIHRoaW5ncyB1cCBmb3IgdGVzdGluZyBhbmQgZGV2ZWxvcG1lbnQ/PC9wPgo8cD5Db25zaWRlciB0aGUgY2FzZSBvZiBtYWtpbmcgQVdTLWhvc3RlZCBSZWRpcyBhY2Nlc3NpYmxlIG91dHNpZGUgb2YgdGhlIEFXUyBuZXR3b3JrLjwvcD4KPHA+T25lIG9wdGlvbiBpcyBlbGFzdGljYWNoZS4gRWxhc3RpY2FjaGUgY2FuIGJlIGNvbmZpZ3VyZWQgdG8gYmUgYWNjZXNzaWJsZSBvdXRzaWRlIG9mIEFXUywgYnV0IG5vdCB3aXRob3V0IGRpZmZpY3VsdHkuIDwvcD4KPHA+SSB0b29rIHRoZSBESVkgYXBwcm9hY2ggYW5kIGluc3RhbGxlZCBSZWRpcyBvbiBhIGNsZWFuIEVDMiBpbnN0YW5jZS4gRXhwb3NpbmcgUmVkaXMgb24gYW4gRUMyIGluc3RhbmNlIGlzIHJlbGF0aXZlbHkgc3RyYWlnaHRmb3J3YXJkLjwvcD4KPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9jb250ZW50a2l0L3N0YXRpYy9jamtsdXJ1cDAwazAyMDE3MzltZmxnOXN6L3JlZGlzLnBuZyIgLz4KPGgyPldpdGggcmVkaXMtZWMyPC9oMj4KPHA+WW91IGNhbiB1c2UgdGhlIGNvbW1hbmQgbGluZSB0b29sIHJlZGlzLWVjMiB0byBzcGluIHVwIGEgcmVkaXMgaW5zdGFuY2UgYXV0b21hdGljYWxseS48L3A+CjxpbWcgc3JjPSJodHRwczovL3MzLmFtYXpvbmF3cy5jb20vY29udGVudGtpdC9zdGF0aWMvY2prbHVydXAwMGswMjAxNzM5bWZsZzlzei9oeXBlci5naWYiIC8+CjxoMj5BZGQgYW4gSW5ib3VuZCBSdWxlIEV4cG9zaW5nIFlvdXIgUmVkaXMgUG9ydDwvaDI+CjxwPkZpbmQgdGhlIHNlY3VyaXR5IGdyb3VwIGFzc29jaWF0ZWQgd2l0aCB5b3UgRUMyIGluc3RhbmNlIGFuZCBhZGQgYSBjdXN0b20gVENQIGluYm91bmQgcnVsZSBleHBvc2luZyB3aGF0ZXZlciBwb3J0IHlvdSBpbnRlbmQgdG8gdXNlIChpbiB0aGUgc2NyZWVuc2hvdCBiZWxvdywgcG9ydCA2Mzc5KS4gPC9wPgo8aW1nIHNyYz0iaHR0cHM6Ly9zMy5hbWF6b25hd3MuY29tL2NvbnRlbnRraXQvc3RhdGljL2Nqa2x1cnVwMDBrMDIwMTczOW1mbGc5c3ovYXdzLWVjMi1yZWRpcy1pbmJvdW5kLXJ1bGUucG5nIiAvPgo8cD5Ob3RlIHRoYXQgdXNpbmcgdGhlIENJRFIgSVAgMC4wLjAuMC8wIHdoaXRlbGlzdHMgYWxsIHBvc3NpYmxlIElQIGFkZHJlc3NlcyBvbiBwb3J0IDYzNzkuIFRoZXJlZm9yZSB5b3UgbXVzdCBwYXNzd29yZCBwcm90ZWN0IHlvdXIgUmVkaXMgaW5zdGFuY2UgYnkgdW5jb21tZW50aW5nIHJlcXVpcmVwYXNzIGluIHlvdXIgUmVkaXMgY29uZmlndXJhdGlvbiBmaWxlLjwvcD4KPHA+UmVkaXMgaGFzIGZ1bGwgYWNjZXNzIHRvIHRoZSBmaWxlc3lzdGVtICh3aXRoIHRoZSBkZWZhdWx0IGNvbmZpZ3VyYXRpb24pLiBJZiBSZWRpcyBpcyBleHBvc2VkIG9uIGEgcG9ydCBhbmQgbm8gcGFzc3dvcmQgaXMgc2V0IGl0J3MgdHJpdmlhbGx5IGVhc3kgZm9yIG1hbGljaW91cyBhY3RvcnMgdG8gY28tb3B0IHlvdXIgc2VydmVyIGJ5IHVzaW5nIFJlZGlzIHRvIHdyaXRlIHRvIH4vLnNzaC9hdXRob3JpemVkX2tleXM6PC9wPgo8YmxvY2txdW90ZT5ZZXMuIEkgc3VjY2Vzc2Z1bGx5IGdhaW5lZCBhY2Nlc3MgYXMgdGhlIFJlZGlzIHVzZXIsIHdpdGggYSBwcm9wZXIgc2hlbGwsIGluIGxpa2UgZml2ZSBzZWNvbmRzLiBDb3VydGVzeSBvZiBhIFJlZGlzIGluc3RhbmNlIHVucHJvdGVjdGVkIGJlaW5nLCBiYXNpY2FsbHksIGFuIG9uLWRlbWFuZC13cml0ZS10aGlzLWZpbGUgc2VydmVyLCBhbmQgaW4gdGhpcyBjYXNlLCBieSBzc2ggbm90IGJlaW5nIGNvbnNlcnZhdGl2ZSBlbm91Z2ggdG8gZGVueSBhY2Nlc3MgdG8gYSBmaWxlIHdoaWNoIGlzIGFsbCBjb21wb3NlZCBvZiBjb3JydXB0ZWQga2V5cyBidXQgZm9yIG9uZSBzaW5nbGUgZW50cnkuIEhvd2V2ZXIgc3NoIGlzIG5vdCB0aGUgcHJvYmxlbSBoZXJlLCBvbmNlIHlvdSBjYW4gd3JpdGUgZmlsZXMsIGV2ZW4gd2l0aCBiaW5hcnkgZ2FyYmFnZSBpbnNpZGUsIGl04oCZcyBhIG1hdHRlciBvZiB0aW1lIGFuZCB5b3XigJlsbCBnYWluIGFjY2VzcyB0byB0aGUgc3lzdGVtIGluIG9uZSB3YXkgb3IgdGhlIG90aGVyLiZuYnNwOzwvYmxvY2txdW90ZT4KPGgyPkRpc2FibGUgUHJvdGVjdGVkIE1vZGUmbmJzcDs8L2gyPgo8cD5FZGl0IHlvdXIgUmVkaXMgY29uZmlndXJhdGlvbiB0byBkaXNhYmxlIHByb3RlY3RlZCBtb2RlOjwvcD4KPHByZT48Y29kZT5zZWQgLWkgJ3MvcHJvdGVjdGVkLW1vZGUgeWVzL3Byb3RlY3RlZC1tb2RlIG5vLycgL3BhdGgvdG8veW91ci9yZWRpcy5jb25mPC9jb2RlPjwvcHJlPgo8aDI+QmluZCAwLjAuMC4wIChPciBDb21tZW50IE91dCB0aGUgTGluZSk8L2gyPgo8cHJlPjxjb2RlPnNlZCAtaSAncy9iaW5kXHMxMjcuMC4wLjEvYmluZCAwLjAuMC4wLycgL3BhdGgvdG8veW91ci9yZWRpcy5jb25mPC9jb2RlPjwvcHJlPgo8aDI+UGFzc3dvcmQtUHJvdGVjdCBZb3VyIFJlZGlzIEluc3RhbmNlPC9oMj4KPHA+UmVkaXMgaXMgZmFzdCBhbmQgbWlsbGlvbnMgb2YgcGFzc3dvcmRzIGNhbiBiZSBjaGVja2VkIHBlciBzZWNvbmQuIFRoZXJlZm9yZSB5b3UgbmVlZCBhIHJlYWxseSBkaWZmaWN1bHQgcGFzc3dvcmQuPC9wPgo8cD5FZGl0IHlvdXIgUmVkaXMgY29uZmlndXJhdGlvbiBzdWNoIHRoYXQgcmVxdWlyZXBhc3MgaXMgdW5jb21tZW50ZWQgb3IgY29weSB0aGUgZm9sbG93aW5nIGxpbmUuPC9wPgo8cHJlPjxjb2RlPnNlZCAtaSAicy8jIHJlcXVpcmVwYXNzLiovcmVxdWlyZXBhc3MgTVlfRVhUUkVNRUxZX0RJRkZJQ1VMVF9QQVNTV09SRC8iIC9wYXRoL3RvL3lvdXIvcmVkaXMuY29uZjwvY29kZT48L3ByZT4KPGgyPkRpc2FibGluZyBUaGUgRmlyZXdhbGw8L2gyPgo8cD5JZiB5b3UncmUgaGF2aW5nIHRyb3VibGUgY29ubmVjdGluZyB0byB5b3VyIEVDMi1ob3N0ZWQgUmVkaXMsIHlvdSBtYXkgbmVlZCB0byBkaXNhYmxlIGlwdGFibGVzLjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZ3VhZ2UtYmFzaCI+PHNwYW4gY2xhc3M9InRva2VuIGZ1bmN0aW9uIj5zZXJ2aWNlPC9zcGFuPiBpcHRhYmxlcyBzYXZlCjxzcGFuIGNsYXNzPSJ0b2tlbiBmdW5jdGlvbiI+c2VydmljZTwvc3Bhbj4gaXB0YWJsZXMgc3RvcAo8c3BhbiBjbGFzcz0idG9rZW4gZnVuY3Rpb24iPmNoa2NvbmZpZzwvc3Bhbj4gaXB0YWJsZXMgb2ZmPC9jb2RlPjwvcHJlPgo8aDI+SW5zdGFsbGluZyBSZWRpcyBPbiBFQzI8L2gyPgo8cD5Tb21lIG5vdGVzIG9uIGluc3RhbGxhdGlvbjo8L3A+Cjx1bD4KICA8bGk+WW91IGRvbid0IG5lZWQgdG8gU1NIIGludG8geW91ciBpbnN0YW5jZSB0byBpbnN0YWxsIFJlZGlzLiBJbnN0ZWFkLCB5b3UgY2FuIHN1cHBseSBhIHNjcmlwdCB2aWEgdGhlIDxjb2RlPnVzZXItZGF0YTwvY29kZT4gYXJndW1lbnQuIDxjb2RlPnVzZXItZGF0YTwvY29kZT4gaXMganVzdCBhIGJhc2ggc2NyaXB0IHRoYXQgaXMgcnVuIGF1dG9tYXRpY2FsbHkgb25jZSBvbiB0aGUgaW5zdGFuY2UgYWZ0ZXIgZGVwbG95bWVudC4gSWYgeW91J3JlIGNyZWF0aW5nIHlvdXIgaW5zdGFuY2UgZnJvbSB0aGUgY29tbWFuZCBsaW5lLCBBV1MgZXhwZWN0cyA8Y29kZT51c2VyLWRhdGE8L2NvZGU+IHRvIGJlIGEgc3RyaW5nLCBlLmcuLCAnIyEvdXNyL2Jpbi9lbnYgYmFzaC4uLi4nLiBJZiB5b3UncmUgdXNpbmcgdGhlIEFXUyBTREssIHRoZSBwYXJhbWV0ZXIgaXMgbmFtZWQgPGNvZGU+VXNlckRhdGE8L2NvZGU+IGFuZCBtdXN0IGJlIGJhc2U2NCBlbmNvZGVkLiBGb3IgZXhhbXBsZTogPGNvZGU+ZWMyLmxhdW5jaEluc3RhbmNlcyh7IFVzZXJEYXRhOiBmcy5yZWFkRmlsZVN5bmMoJ3NjcmlwdC5zaCcsIHsgZW5jb2Rpbmc6ICdiYXNlNjQnIH0pPC9jb2RlPi48L2xpPgo8L3VsPgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vdW5zaGlmdC9kZWVhNDYzYTQ1M2UxZjdkZmE1ZTNjZWY5NTAzMWE2OC5qcyI+PC9zY3JpcHQ+CjxoMj5GdXJ0aGVyIFJlYWRpbmc8L2gyPgo8dWw+CiAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQxMzQyOTcyL3VuYWJsZS10by1jb25uZWN0LXJlZGlzLXNlcnZlci1vbi1hd3MtZWMyLXBvcnQtNjM3OSI+VW5hYmxlIHRvIGNvbm5lY3QgcmVkaXMgc2VydmVyIG9uIEFXUyBFQzIgcG9ydCA2Mzc5PC9hPjwvbGk+CiAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzIxOTE3NjYxL2Nhbi15b3UtY29ubmVjdC10by1hbWF6b24tZWxhc3RpY2FjaGUtcmVkaXMtb3V0c2lkZS1vZi1hbWF6b24iPkNhbiB5b3UgY29ubmVjdCB0byBBbWF6b24gRWxhc3RpY2FjaGUgUmVkaXMgb3V0c2lkZSBvZiBBbWF6b248L2E+PC9saT4KICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDMyOTg0NDYvdW5hYmxlLXRvLWNvbm5lY3QtdG8tcmVkaXMtc2VydmVyLWRlcGxveWVkLW9uLWFtYXpvbi1lYzItb24tcG9ydC02Mzc5Ij5VbmFibGUgdG8gY29ubmVjdCB0byByZWRpcyBzZXJ2ZXIgZGVwbG95ZWQgb24gQW1hem9uIGVjMiBvbiBwb3J0IDYzNzk8L2E+PC9saT4KICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDQwODk4MzIvaG93LXRvLW1ha2UtcmVkaXMtaW5zdGFuY2Utb24tYXdzLXRvLWJlLWFjY2Vzc2libGUtZnJvbS1vdXRzaWRlLW9mLXZwYyI+SG93IHRvIG1ha2UgcmVkaXMgaW5zdGFuY2Ugb24gQVdTIHRvIGJlIGFjY2Vzc2libGUgZnJvbSBvdXRzaWRlIG9mIFZQQzwvYT48L2xpPgogIDxsaT48YSBocmVmPSJodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy80MTgyMTYwNy9jYW50LWNvbm5lY3QtcmVkaXMtY2xpLXdpdGgtYW1hem9uLWVsYXN0aWMtY2FjaGUiPkNhbnQgY29ubmVjdCByZWRpcy1jbGkgd2l0aCBhbWF6b24gZWxhc3RpYyBjYWNoZTwvYT48L2xpPgogIDxsaT48YSBocmVmPSJodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy80MzI5ODQ0Ni91bmFibGUtdG8tY29ubmVjdC10by1yZWRpcy1zZXJ2ZXItZGVwbG95ZWQtb24tYW1hem9uLWVjMi1vbi1wb3J0LTYzNzkiPlVuYWJsZSB0byBjb25uZWN0IHRvIHJlZGlzIHNlcnZlciBkZXBsb3llZCBvbiBBbWF6b24gZWMyIG9uIHBvcnQgNjM3OTwvYT48L2xpPgogIDxsaT48YSBocmVmPSJodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8yODc2NDc4Ny91bmFibGUtdG8tb3Blbi1yZWRpcy02Mzc5LWZvci1pbmJvdW5kLW9uLWF3cy1lYzIiPlVuYWJsZSB0byBvcGVuIHJlZGlzIDYzNzkgZm9yIGluYm91bmQgb24gQVdTIEVDMjwvYT48L2xpPgo8L3VsPg==","excerpt":"","image":{"id":"6ovlljrbmhcymzsr7dofh1k5g","url":"static/cjklurup00k0201739mflg9sz/logo.jpeg"},"posts_tags":[{"tag":{"id":"5276cfewytt6smbp4sc2","name":"Redis"}}],"date":"08/09/2018","html":"<p>AWS resources are secure by default which is a good thing. However, what happens when you want to open things up for testing and development?</p>\n<p>Consider the case of making AWS-hosted Redis accessible outside of the AWS network.</p>\n<p>One option is elasticache. Elasticache can be configured to be accessible outside of AWS, but not without difficulty. </p>\n<p>I took the DIY approach and installed Redis on a clean EC2 instance. Exposing Redis on an EC2 instance is relatively straightforward.</p>\n<img src=\"https://s3.amazonaws.com/contentkit/static/cjklurup00k0201739mflg9sz/redis.png\" />\n<h2>With redis-ec2</h2>\n<p>You can use the command line tool redis-ec2 to spin up a redis instance automatically.</p>\n<img src=\"https://s3.amazonaws.com/contentkit/static/cjklurup00k0201739mflg9sz/hyper.gif\" />\n<h2>Add an Inbound Rule Exposing Your Redis Port</h2>\n<p>Find the security group associated with you EC2 instance and add a custom TCP inbound rule exposing whatever port you intend to use (in the screenshot below, port 6379). </p>\n<img src=\"https://s3.amazonaws.com/contentkit/static/cjklurup00k0201739mflg9sz/aws-ec2-redis-inbound-rule.png\" />\n<p>Note that using the CIDR IP 0.0.0.0/0 whitelists all possible IP addresses on port 6379. Therefore you must password protect your Redis instance by uncommenting requirepass in your Redis configuration file.</p>\n<p>Redis has full access to the filesystem (with the default configuration). If Redis is exposed on a port and no password is set it's trivially easy for malicious actors to co-opt your server by using Redis to write to ~/.ssh/authorized_keys:</p>\n<blockquote>Yes. I successfully gained access as the Redis user, with a proper shell, in like five seconds. Courtesy of a Redis instance unprotected being, basically, an on-demand-write-this-file server, and in this case, by ssh not being conservative enough to deny access to a file which is all composed of corrupted keys but for one single entry. However ssh is not the problem here, once you can write files, even with binary garbage inside, it’s a matter of time and you’ll gain access to the system in one way or the other.&nbsp;</blockquote>\n<h2>Disable Protected Mode&nbsp;</h2>\n<p>Edit your Redis configuration to disable protected mode:</p>\n<pre><code>sed -i 's/protected-mode yes/protected-mode no/' /path/to/your/redis.conf</code></pre>\n<h2>Bind 0.0.0.0 (Or Comment Out the Line)</h2>\n<pre><code>sed -i 's/bind\\s127.0.0.1/bind 0.0.0.0/' /path/to/your/redis.conf</code></pre>\n<h2>Password-Protect Your Redis Instance</h2>\n<p>Redis is fast and millions of passwords can be checked per second. Therefore you need a really difficult password.</p>\n<p>Edit your Redis configuration such that requirepass is uncommented or copy the following line.</p>\n<pre><code>sed -i \"s/# requirepass.*/requirepass MY_EXTREMELY_DIFFICULT_PASSWORD/\" /path/to/your/redis.conf</code></pre>\n<h2>Disabling The Firewall</h2>\n<p>If you're having trouble connecting to your EC2-hosted Redis, you may need to disable iptables.</p>\n<pre><code class=\"language-bash\"><span class=\"token function\">service</span> iptables save\n<span class=\"token function\">service</span> iptables stop\n<span class=\"token function\">chkconfig</span> iptables off</code></pre>\n<h2>Installing Redis On EC2</h2>\n<p>Some notes on installation:</p>\n<ul>\n  <li>You don't need to SSH into your instance to install Redis. Instead, you can supply a script via the <code>user-data</code> argument. <code>user-data</code> is just a bash script that is run automatically once on the instance after deployment. If you're creating your instance from the command line, AWS expects <code>user-data</code> to be a string, e.g., '#!/usr/bin/env bash....'. If you're using the AWS SDK, the parameter is named <code>UserData</code> and must be base64 encoded. For example: <code>ec2.launchInstances({ UserData: fs.readFileSync('script.sh', { encoding: 'base64' })</code>.</li>\n</ul>\n<script src=\"https://gist.github.com/unshift/deea463a453e1f7dfa5e3cef95031a68.js\"></script>\n<h2>Further Reading</h2>\n<ul>\n  <li><a href=\"https://stackoverflow.com/questions/41342972/unable-to-connect-redis-server-on-aws-ec2-port-6379\">Unable to connect redis server on AWS EC2 port 6379</a></li>\n  <li><a href=\"https://stackoverflow.com/questions/21917661/can-you-connect-to-amazon-elasticache-redis-outside-of-amazon\">Can you connect to Amazon Elasticache Redis outside of Amazon</a></li>\n  <li><a href=\"https://stackoverflow.com/questions/43298446/unable-to-connect-to-redis-server-deployed-on-amazon-ec2-on-port-6379\">Unable to connect to redis server deployed on Amazon ec2 on port 6379</a></li>\n  <li><a href=\"https://stackoverflow.com/questions/44089832/how-to-make-redis-instance-on-aws-to-be-accessible-from-outside-of-vpc\">How to make redis instance on AWS to be accessible from outside of VPC</a></li>\n  <li><a href=\"https://stackoverflow.com/questions/41821607/cant-connect-redis-cli-with-amazon-elastic-cache\">Cant connect redis-cli with amazon elastic cache</a></li>\n  <li><a href=\"https://stackoverflow.com/questions/43298446/unable-to-connect-to-redis-server-deployed-on-amazon-ec2-on-port-6379\">Unable to connect to redis server deployed on Amazon ec2 on port 6379</a></li>\n  <li><a href=\"https://stackoverflow.com/questions/28764787/unable-to-open-redis-6379-for-inbound-on-aws-ec2\">Unable to open redis 6379 for inbound on AWS EC2</a></li>\n</ul>"}}}}