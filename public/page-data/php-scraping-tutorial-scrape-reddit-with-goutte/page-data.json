{"componentChunkName":"component---src-components-post-tsx","path":"/php-scraping-tutorial-scrape-reddit-with-goutte","result":{"pageContext":{"post":{"id":"cjeqgfmvxnnp90199bdti4r8n","title":"PHP Scraping Tutorial - Scrape Reddit With Goutte","slug":"php-scraping-tutorial-scrape-reddit-with-goutte","published_at":"2017-10-07T05:56:59.576","created_at":"2018-03-14T02:16:34","encoded_html":"","excerpt":"I needed to scrape Reddit posts for a project. After having fun with some tools I decided to docume","image":null,"posts_tags":[],"date":"10/07/2017","html":"<p>I needed to scrape Reddit posts for a project. After having fun with some tools I decided to document the process. However I my process is generalizable to scraping anything.</p>\n<p>First, what is a web scraper? You could manually copy and paste data from websites into a spreadsheet, but that would take far too long if you are working on a big project.</p>\n<p>Scraping lets you programmatically copy data at a high throughput.</p>\n<h2>Scraping Libraries</h2>\n<p>For this project, I chose PHP because it has some extra syntactic sugar.</p>\n<p>The best (php) scraping library is Goutte.</p>\n<h2>Installing Goutte</h2>\n<p>First, you'll need to install Compose, which is a package management tool for PHP. In terminal type:</p>\n<pre><code class=\"language-php\"><span class=\"token shell-comment comment\"># Install Composer</span>\ncurl <span class=\"token operator\">-</span>sS https<span class=\"token punctuation\">:</span><span class=\"token comment\">//getcomposer.org/installer | php</span></code></pre>\n<p>Now add Goutte as a dependency to your project.</p>\n<pre><code class=\"language-php\">composer <span class=\"token keyword\">require</span> fabpot<span class=\"token operator\">/</span>goutte</code></pre>\n<p>But Goutte requires Guzzle, so you'll need to install that too.</p>\n<h2>Installing Guzzle</h2>\n<p>Guzzle is a PHP HTTP client that makes it easy to send HTTP requests and trivial to integrate with web services.</p>\n<pre><code class=\"language-bash\">php composer.phar require guzzlehttp/guzzle</code></pre>\n<p>Now if you open composer.json it should look something like:</p>\n<pre><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"my_project\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"require\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"fabpot/goutte\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.2\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"guzzlehttp/guzzle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^6.2\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>After installing Goutte and Guzzle, you need to include composer's autoloader.</p>\n<p>So create a file index.php and at the top include:</p>\n<pre><code class=\"language-php\"><span class=\"token keyword\">require</span> <span class=\"token single-quoted-string string\">'vendor/autoload.php'</span><span class=\"token punctuation\">;</span></code></pre>\n<h2>Scraping Your First Page</h2>\n<h3>Example: Scraping Reddit's Front Page</h3>\n<p>To scrape stuff with Guzzle, you only need to write a few lines of code. For example:</p>\n<pre><code class=\"language-php\"><span class=\"token keyword\">require</span> <span class=\"token single-quoted-string string\">'vendor/autoload.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Goutte<span class=\"token punctuation\">\\</span>Client</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"http://www.reddit.com\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$css_selector</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"a.title.may-blank\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$thing_to_scrape</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"_text\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$client</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Client</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$crawler</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$client</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$output</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$crawler</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$css_selector</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$thing_to_scrape</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$output</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>With this PHP snipped, we:</p>\n<ul>\n  <li>required composer's autoloader on line 1.</li>\n  <li>specified that we wanted to use Goutte</li>\n  <li>specified a $url to scrape</li>\n  <li>specified a CSS selector ('a.title.may-blank') to tell Goutte which <a href=\"http://stackoverflow.com/questions/1122437/what-is-dom-element\">DOM element</a> to scrape</li>\n</ul>\n<h4>Getting The Right CSS Selector</h4>\n<p>This is the easy part. Using Chrome's developer tools you can inspect any element to reveal its attributes.</p>\n<p>On Reddit, I right-clicked a post title.</p>\n<img src=\"https://s3.amazonaws.com/contentkit-dev-deploymentbucket-3hlcbqx9f9nl/static/cjeqgfmvxnnp90199bdti4r8n/reddit-scrape-1.png\" />\n<p>And noted the link element's classes, title, may-blank, and outbound.</p>\n<h2>Proving To Yourself That It Works</h2>\n<p>Return to terminal and type php index.php to run the PHP script.</p>\n<p>In terminal you should see output like:</p>\n<pre><code class=\"language-bash\">array<span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token operator\">></span>\n  string<span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"from sad to happy\"</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token operator\">></span>\n  string<span class=\"token punctuation\">(</span><span class=\"token number\">183</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"The president of the Philippines Rodrigo Duterte should be investigated for murder after boasting he \"</span>personally<span class=\"token string\">\" killed three suspected criminals, a top United Nations official said.\"</span></code></pre>\n<p>This is just an array that comprises all of the Reddit post titles on the front page.</p>\n<h2>The Power of Goutte</h2>\n<p>The power of this approach is that we can target the elements to scrape using a css selector.</p>\n<p>This approach is reminiscent of javascript and Jquery where you can manipulate the DOM using similar syntax, e.g.:</p>\n<pre><code class=\"language-javascript\"><span class=\"token keyword\">var</span> title <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a.title.may-blank'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2>Target Any Attribute</h2>\n<p>In the previous Reddit we scraped the post titles on the front page of Reddit. Therefore we used <code>_text</code> to get the text. Here are some other things we can fetch:</p>\n<ul>\n  <li><strong>href</strong> - scrape a url</li>\n  <li><strong>src</strong> - scrape a link to an image</li>\n  <li><strong>class</strong> - scrape a CSS class</li>\n  <li><strong>_text</strong> - scrape text</li>\n</ul>\n<p>Note: Symphony's DomCrawler supports special link.</p>\n<p>So instead of getting the attribute with <code>href</code> you can also write:</p>\n<pre><code class=\"language-php\"><span class=\"token variable\">$output</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$crawler</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'a.title.may-blank'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">link</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$uri</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$link</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getUri</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<blockquote>The getUri() is especially useful as it cleans the href value and transforms it into how it should really be processed. For example, for a link with href=\"#foo\", this would return the full URI of the current page suffixed with #foo. The return from getUri() is always a full URI that you can act on.</blockquote>\n<p>Link to section in Symfony DOMCrawler Docs.</p>\n<h3>In One Fell Swoop</h3>\n<p>We can scrape many attribute values at once. For example, this line fetches the text, class and url of an element:</p>\n<pre><code class=\"language-php\"><span class=\"token variable\">$output</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$crawler</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$css_selector</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'_text'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'class'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'href'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>For the Reddit example, the above code would return:</p>\n<img src=\"https://s3.amazonaws.com/contentkit-dev-deploymentbucket-3hlcbqx9f9nl/static/cjeqgfmvxnnp90199bdti4r8n/reddit-scrape-3.png\" />\n<pre><code class=\"language-bash\">  <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token operator\">></span>\n  array<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token operator\">></span>\n    string<span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"from sad to happy\"</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token operator\">></span>\n    string<span class=\"token punctuation\">(</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"title may-blank outbound\"</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token operator\">></span>\n    string<span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"http://i.imgur.com/P45maQC.gif\"</span>\n  <span class=\"token punctuation\">}</span></code></pre>\n<h2>Node Traversing</h2>\n<p>Consider once again Reddit's front page. There are a bunch of posts. What if we only want to select the second post and not all of them? We can access node by its position on the list:</p>\n<pre><code class=\"language-php\"><span class=\"token variable\">$output</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$crawler</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'a.title.may-blank'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// CSS selector</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// node position</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'_text'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// DOM attribute to extract</span></code></pre>\n<h2>Scraping Multiple Pages</h2>\n<p>Scraping multiple pages is easy with Goutte. We just need a foreach loop.</p>\n<p>First we create an array of links:</p>\n<pre><code class=\"language-php\"><span class=\"token comment\">// links to scrape</span>\n<span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n    <span class=\"token single-quoted-string string\">'https://www.reddit.com'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token single-quoted-string string\">'https://www.reddit.com/new/'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token single-quoted-string string\">'https://www.reddit.com/rising/'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>And here's what the foreach loop might look like:</p>\n<pre><code class=\"language-php\"><span class=\"token keyword\">require</span> <span class=\"token single-quoted-string string\">'vendor/autoload.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Goutte<span class=\"token punctuation\">\\</span>Client</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n    <span class=\"token single-quoted-string string\">'https://www.reddit.com'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token single-quoted-string string\">'https://www.reddit.com/new/'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token single-quoted-string string\">'https://www.reddit.com/rising/'</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$selector</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"a.title.may-blank\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$attribute</span> <span class=\"token operator\">=</span> <span class=\"token double-quoted-string string\">\"_text\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$client</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Client</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// on the first iteration, $value = 'https://www.reddit.com', on the second $value = 'https://www.reddit.com/new/', and so forth. </span>\n    <span class=\"token variable\">$crawler</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$client</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$output</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$crawler</span>\n        <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$selector</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// scrape the second post only</span>\n        <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$attribute</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$output</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Clone this repository for a quick start: https://github.com/unshift/goutte-php-scraper-boilerplate/blob/master/index.php#L25</p>\n<p>That's it! Now go forth and scrape responsibly.</p>"}}}}