{"componentChunkName":"component---src-components-post-tsx","path":"/websockets-aws-elasticbeanstalk-ec2","result":{"pageContext":{"post":{"id":"cjeqgfqsgnnq70199l4vc6vim","title":"Configuring WebSockets on Elastic Beanstalk/EC2","slug":"websockets-aws-elasticbeanstalk-ec2","published_at":"2018-07-15T09:50:37.548","created_at":"2018-03-14T02:16:39","encoded_html":"PHA+SGVyZSdzIGEgcXVpY2stYW5kLWRpcnR5IGd1aWRlIHRvIGNvbmZpZ3VyaW5nIFdlYlNvY2tldHMgb24gYW4gQVdTIEVDMiBpbnN0YW5jZS9FbGFzdGljIEJlYW5zdGFsay48L3A+CjxwPldpdGhvdXQgYW55IGNvbmZpZ3VyYXRpb24gb24gRUMyLCB0aGUgY2xpZW50IHNpZGUgd2lsbCBiZSB1bmFibGUgdG8gY29ubmVjdCB0byBhIFdlYlNvY2tldCBvbiB0aGUgc2VydmVyLjwvcD4KPHA+V2ViU29ja2V0cyBhbGxvdyB0d28td2F5IGNvbW11bmljYXRpb24gYmV0d2VlbiBjbGllbnQgYW5kIHNlcnZlci48L3A+CjxwPlRoZSBXZWJTb2NrZXQgcHJvdG9jb2wgY29uc2lzdHMgb2YgYW4gb3BlbmluZyBoYW5kc2hha2UgZm9sbG93ZWQgYnkgYmlkaXJlY3Rpb25hbCBtZXNzYWdlcyBsYXllcmVkIG92ZXIgVENQLiBUaGUgaGFuZHNoYWtlIGlzIHRoZSBicmlkZ2UgZnJvbSBIVFRQIHRvIFdTLiBUaGUgY2xpZW50IHNlbmRzIGEgcnVuLW9mLXRoZS1taWxsIGdldCByZXF1ZXN0IHdpdGggaGVhZGVycyB0aGF0IGxvb2sgbGlrZSB0aGVzZTo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmd1YWdlLWJhc2giPkdFVCAvY2hhdCBIVFRQLzEuMQpIb3N0OiBleGFtcGxlLmNvbTo4MDAwClVwZ3JhZGU6IHdlYnNvY2tldApDb25uZWN0aW9uOiBVcGdyYWRlClNlYy1XZWJTb2NrZXQtS2V5OiA8c3BhbiBjbGFzcz0idG9rZW4gYXNzaWduLWxlZnQgdmFyaWFibGUiPmRHaGxJSE5oYlhCc1pTQnViMjVqWlE8L3NwYW4+PHNwYW4gY2xhc3M9InRva2VuIG9wZXJhdG9yIj49PTwvc3Bhbj4KU2VjLVdlYlNvY2tldC1WZXJzaW9uOiA8c3BhbiBjbGFzcz0idG9rZW4gbnVtYmVyIj4xMzwvc3Bhbj48L2NvZGU+PC9wcmU+CjxwPklmIHRoZSBuZWdvdGlhdGlvbiBpcyBzdWNjZXNzZnVsIHRoZSBXUyBzZXJ2ZXIgcmVzcG9uZHMgd2l0aCBzb21ldGhpbmcgbGlrZTo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmd1YWdlLWJhc2giPkhUVFAvMS4xIDxzcGFuIGNsYXNzPSJ0b2tlbiBudW1iZXIiPjEwMTwvc3Bhbj4gU3dpdGNoaW5nIFByb3RvY29scwpVcGdyYWRlOiB3ZWJzb2NrZXQKQ29ubmVjdGlvbjogVXBncmFkZQpTZWMtV2ViU29ja2V0LUFjY2VwdDogczNwUExNQmlUeGFROWtZR3p6aFpSYksreE9vPHNwYW4gY2xhc3M9InRva2VuIG9wZXJhdG9yIj49PC9zcGFuPjwvY29kZT48L3ByZT4KPHA+Rm9yIFdTIHRvIHdvcmsgb24gZWxhc3RpYyBiZWFuc3RhbGsvRUMyLCB0aGUgc2VydmVyIG11c3QgbGlzdGVuIGZvciBpbmNvbWluZyBzb2NrZXQgY29ubmVjdGlvbnMgdXNpbmcgYSBzdGFuZGFyZCBUQ1Agc29ja2V0LjwvcD4KPHA+VGhlIGZpcnN0IHN0ZXAgdG8gcnVubmluZyBhIFdlYlNvY2tldCBzZXJ2ZXIgb24gRUMyL0VsYXN0aWMgQmVhbnN0YWxrIGlzIHNldHRpbmcgdGhlIHByb3RvY29sIHRvIFRDUCAocmF0aGVyIHRoYW4gSFRUUCkgYW5kIGxpc3RlbmluZyBvbiBQT1JUIDgwLjwvcD4KPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9jb250ZW50a2l0L3N0YXRpYy9jamVxZ2Zxc2dubnE3MDE5OWw0dmM2dmltL2F3cy13ZWJzb2NrZXRzLTEucG5nIiAvPgo8aDI+U2VjdXJpdHkgR3JvdXAgQ29uZmlndXJhdGlvbiZuYnNwOzwvaDI+CjxwPk5leHQsIG5hdmlnYXRlIHRvIEVDMiA+IE5ldHdvcmsgJiBTZWN1cml0eSA+IFNlY3VyaXR5IEdyb3Vwcy48L3A+CjxwPlNlbGVjdCB0aGUgc2VjdXJpdHkgZ3JvdXAgdGhhdCdzIGFzc29jaWF0ZWQgd2l0aCB5b3VyIEVDMiBpbnN0YW5jZSwgY2xpY2sgdGhlIEluYm91bmQgdGFiLCBhbmQgY2xpY2sgZWRpdC48L3A+CjxwPllvdSdsbCBuZWVkIHRvIGFkZCBhIHJ1bGUgdGhhdCBsb29rcyBzb21ldGhpbmcgbGlrZSB0aGUgZm9sbG93aW5nOjwvcD4KPGltZyBzcmM9Imh0dHBzOi8vczMuYW1hem9uYXdzLmNvbS9jb250ZW50a2l0L3N0YXRpYy9jamVxZ2Zxc2dubnE3MDE5OWw0dmM2dmltL2F3cy13ZWJzb2NrZXRzLTIucG5nIiAvPgo8cD5UaGUgdHlwZSBzaG91bGQgYmUgSFRUUCwgdGhlIHByb3RvY29sIFRDUCwgdGhlIFBPUlQgODAsIGFuZCB0aGUgc291cmNlIEFueXdoZXJlIChvciAwLjAuMC4wLzAsIDo6LzApLjwvcD4KPGgyPk5HSU5YIENvbmZpZ3VyYXRpb248L2gyPgo8cD5XaGVuIGEgV1MgY2xpZW50IGlzc3VlcyBhIGhhbmRzaGFrZSByZXF1ZXN0LCB0aGUgV1Mgc2VydmVyIG5lZWRzIHRvIHJlc3BvbmQgd2l0aCB0aGUgcmlnaHQgaGVhZGVycy4gRm9yIGV4YW1wbGUsIHRoZSBzZXJ2ZXIgbmVlZHMgdG8gcmVzcG9uZCB3aXRoOjwvcD4KPHByZT48Y29kZSBjbGFzcz0ibGFuZ3VhZ2UtYmFzaCI+VXBncmFkZTogd2Vic29ja2V0CkNvbm5lY3Rpb246IFVwZ3JhZGU8L2NvZGU+PC9wcmU+CjxwPldpdGggRWxhc3RpYyBCZWFuc3RhbGssIEVDMiBpbnN0YW5jZXMgYXJlIHRyYW5zaWVudC4gVGhlcmVmb3JlIGltcGFydGluZyB0aGUgcmlnaHQgTkdJTlggY29uZmlnIHRvIG9uZSBwYXJ0aWN1bGFyIGJveCBpcyBpbnN1ZmZpY2llbnQuIEluc3RlYWQsIHdlIGNhbiB3cml0ZSBhIHJlY2lwZSB3aXRoIHByZS0gYW5kIHBvc3QtZGVwbG95IGhvb2tzLiBDcmVhdGluZyBhIGhvb2sgaXMgYXMgc2ltcGxlIGFzIGFkZGluZyBhIGZpbGUgaW4geW91cl9wcm9qZWN0X3Jvb3QvLmViZXh0ZW5zaW9ucy9teV9jb25maWdfZmlsZS5jb25maWcuPC9wPgo8cD5JbiB0aGUgZXhhbXBsZSBiZWxvdywgd2UgdGVsbCBFbGFzdGljIEJlYW5zdGFsayB0byBjcmVhdGUgdHdvIG5ldyBmaWxlcy4gVGhlIGZpcnN0IGxpdmVzIGF0L2V0Yy9uZ2lueC9jb25mLmQvMDFfd2Vic29ja2V0cy5jb25mIG9uIHRoZSBFQzIgaW5zdGFuY2UuIFRoZSBjb250ZW50cyBhcmUgYW4gTkdJTlggY29uZmlndXJhdGlvbiBmaWxlIHRoYXQgc2V0cyB0aGUgVXBncmFkZSBhbmQgQ29ubmVjdGlvbiBoZWFkZXJzLjwvcD4KPHA+VGhlIHNlY29uZCBmaWxlIGlzIGJhc2ggc2NyaXB0IHRoYXQgcmVuYW1lcyB0aGUgZGVmYXVsdCBFbGFzdGljIEJlYW5zdGFsayBOR0lOWCBwcm94eSBjb25maWd1cmF0aW9uIGZpbGUgc28gdGhhdCB3ZSB1c2UgdGhlIG5ldyBvbmUuPC9wPgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vdW5zaGlmdC8zMjRiZTZhOGRjOWU4ODBkNGQ2NzBkZTBkYzk3YThjZS5qcyI+PC9zY3JpcHQ+CjxwPuKAizwvcD4=","excerpt":"Here's a quick-and-dirty guide to configuring WebSockets on an AWS EC2 instance/Elastic Beanstalk.","image":{"id":"an5lsj9zl9202rhdox9mvgagr","url":"static/cjeqgfqsgnnq70199l4vc6vim/aws.png"},"posts_tags":[],"date":"07/15/2018","html":"<p>Here's a quick-and-dirty guide to configuring WebSockets on an AWS EC2 instance/Elastic Beanstalk.</p>\n<p>Without any configuration on EC2, the client side will be unable to connect to a WebSocket on the server.</p>\n<p>WebSockets allow two-way communication between client and server.</p>\n<p>The WebSocket protocol consists of an opening handshake followed by bidirectional messages layered over TCP. The handshake is the bridge from HTTP to WS. The client sends a run-of-the-mill get request with headers that look like these:</p>\n<pre><code class=\"language-bash\">GET /chat HTTP/1.1\nHost: example.com:8000\nUpgrade: websocket\nConnection: Upgrade\nSec-WebSocket-Key: <span class=\"token assign-left variable\">dGhlIHNhbXBsZSBub25jZQ</span><span class=\"token operator\">==</span>\nSec-WebSocket-Version: <span class=\"token number\">13</span></code></pre>\n<p>If the negotiation is successful the WS server responds with something like:</p>\n<pre><code class=\"language-bash\">HTTP/1.1 <span class=\"token number\">101</span> Switching Protocols\nUpgrade: websocket\nConnection: Upgrade\nSec-WebSocket-Accept: s3pPLMBiTxaQ9kYGzzhZRbK+xOo<span class=\"token operator\">=</span></code></pre>\n<p>For WS to work on elastic beanstalk/EC2, the server must listen for incoming socket connections using a standard TCP socket.</p>\n<p>The first step to running a WebSocket server on EC2/Elastic Beanstalk is setting the protocol to TCP (rather than HTTP) and listening on PORT 80.</p>\n<img src=\"https://s3.amazonaws.com/contentkit/static/cjeqgfqsgnnq70199l4vc6vim/aws-websockets-1.png\" />\n<h2>Security Group Configuration&nbsp;</h2>\n<p>Next, navigate to EC2 > Network & Security > Security Groups.</p>\n<p>Select the security group that's associated with your EC2 instance, click the Inbound tab, and click edit.</p>\n<p>You'll need to add a rule that looks something like the following:</p>\n<img src=\"https://s3.amazonaws.com/contentkit/static/cjeqgfqsgnnq70199l4vc6vim/aws-websockets-2.png\" />\n<p>The type should be HTTP, the protocol TCP, the PORT 80, and the source Anywhere (or 0.0.0.0/0, ::/0).</p>\n<h2>NGINX Configuration</h2>\n<p>When a WS client issues a handshake request, the WS server needs to respond with the right headers. For example, the server needs to respond with:</p>\n<pre><code class=\"language-bash\">Upgrade: websocket\nConnection: Upgrade</code></pre>\n<p>With Elastic Beanstalk, EC2 instances are transient. Therefore imparting the right NGINX config to one particular box is insufficient. Instead, we can write a recipe with pre- and post-deploy hooks. Creating a hook is as simple as adding a file in your_project_root/.ebextensions/my_config_file.config.</p>\n<p>In the example below, we tell Elastic Beanstalk to create two new files. The first lives at/etc/nginx/conf.d/01_websockets.conf on the EC2 instance. The contents are an NGINX configuration file that sets the Upgrade and Connection headers.</p>\n<p>The second file is bash script that renames the default Elastic Beanstalk NGINX proxy configuration file so that we use the new one.</p>\n<script src=\"https://gist.github.com/unshift/324be6a8dc9e880d4d670de0dc97a8ce.js\"></script>\n<p>â€‹</p>"}}}}