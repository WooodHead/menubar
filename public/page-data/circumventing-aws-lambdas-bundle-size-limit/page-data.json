{"componentChunkName":"component---src-components-post-tsx","path":"/circumventing-aws-lambdas-bundle-size-limit","result":{"pageContext":{"post":{"id":"cjkvpbr6p06z50181fg7xvsc3","title":"Circumventing AWS Lambda's Bundle Size Limit","slug":"circumventing-aws-lambdas-bundle-size-limit","published_at":"2019-08-15T04:00:00","created_at":"2018-08-15T22:22:34","encoded_html":"","excerpt":"Workarounds for the bundle size limit in AWS Lambda.","image":{"id":"10yrhi0c9vdglyx7jkp50yy1x","url":"static/cjkvpbr6p06z50181fg7xvsc3/b2lWK7c0_400x400.png"},"posts_tags":[{"tag":{"id":"3pl7ejawubufz70vjnad","name":"AWS"}}],"date":"08/15/2019","html":"<p>As of this writing, the AWS Lambda's bundle size limit is 250MB (uncompressed).</p>\n<p>This can be a problem if your function depends on large binaries.  </p>\n<p>The 250 MB limit can be overcome by fetching the binaries from an S3 bucket and caching them in the /tmp directory. Permissions in Lambda forbid writing to any other directory besides /tmp. The contents of /tmp are retained between executions if the interval between executions is < 10 minutes.</p>\n<p>This tactic dramatically increases cold-start latency. However, if your lambda function is a worker processing jobs in a queue the increased cold start latency may be acceptable. </p>\n<p>Moreover, since AWS Lambda reuses containers, in most cases you will not need to fetch the binary for each invocation. If you have control over the flow or rate of invocations, it may only be necessary to fetch the binary after publishing the function. </p>\n<p>Here's an example. Let's say you wanted to run LaTeX in AWS Lambda to convert .tex files to PDFs. You might spin up an EC2 container using the same linux AMI as AWS Lambda, compile the binaries, compress them and put them in an S3 bucket. But since they're too large to upload alongside your Lambda function, you'd resort to the above approach.</p>\n<pre><code class=\"language-js\"><span class=\"token keyword\">const</span> got <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'got'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> unzipper <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'unzipper'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> promisify <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'util'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> exec <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'child_process'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> chmod <span class=\"token operator\">=</span> <span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span>chmod<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> list <span class=\"token operator\">=</span> <span class=\"token function\">promisify</span><span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">.</span>readdir<span class=\"token punctuation\">)</span>\nprocess<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PATH</span> <span class=\"token operator\">+=</span> <span class=\"token string\">':/tmp/texlive/2018/bin/x86_64-linux/'</span>\nprocess<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">HOME</span> <span class=\"token operator\">=</span> <span class=\"token string\">'/tmp'</span>\nprocess<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PERL5LIB</span> <span class=\"token operator\">=</span> <span class=\"token string\">'/tmp/texlive/2018/tlpkg/TeXLive/'</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">isInstalled</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pdflatex --version'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> stdout<span class=\"token punctuation\">,</span> stderr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">else</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> installed <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">isInstalled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>installed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> zip <span class=\"token operator\">=</span> unzipper<span class=\"token punctuation\">.</span><span class=\"token function\">Extract</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> path<span class=\"token operator\">:</span> <span class=\"token string\">'/tmp'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    got<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://s3.amazonaws.com/aws-lambda-binaries/texlive.zip'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>zip<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">await</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      zip<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'close'</span><span class=\"token punctuation\">,</span> resolve<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> files <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/texlive/2018/bin/x86_64-linux/'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>\n      files<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">file</span> <span class=\"token operator\">=></span>\n        <span class=\"token function\">chmod</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/tmp/texlive/2018/bin/x86_64-linux/'</span><span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0700'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>"}}}}