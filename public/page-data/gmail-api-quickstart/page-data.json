{"componentChunkName":"component---src-components-post-tsx","path":"/gmail-api-quickstart","result":{"pageContext":{"post":{"id":"cjit96q2yk0is0111qpbmw66s","title":"Getting Started With Gmail API","slug":"gmail-api-quickstart","published_at":"2018-06-28T02:39:14.068","created_at":"2018-06-24T19:55:49","encoded_html":"","excerpt":"","image":{"id":"e81sym07cyoy7cupc5kxcwajs","url":"static/cjit96q2yk0is0111qpbmw66s/gmail.png"},"posts_tags":[],"date":"06/28/2018","html":"<h2>Quick Start</h2>\n<img src=\"https://s3.amazonaws.com/contentkit/static/cjit96q2yk0is0111qpbmw66s/gmail.png\" />\n<p>Gmail's API is robust and useful. If you're building an application that interfaces with Gmail you might find these code snippets useful.</p>\n<p>To access Gmail's API, you'll need to obtain credentials. This walk-through might come in handy with that. </p>\n<p>Once you have credentials, the process is roughly as follows:</p>\n<ul>\n  <li>Install Google's official npm package: <code>npm i googleapis --save</code></li>\n  <li>Create an instance of OAuth2: <code>const auth = new require('googleapis').auth.OAuth2(client_id, client_secret, callback_urls[0]).</code></li>\n  <li>Obtain a url from <code>auth.generateAuthUrl</code>. Redirect the user to the aforementioned url. The user will land on a google-hosted page that prompts them to login with their Gmail account. The login page also alerts the user to the privileges that the app is requesting (see <code>scopes</code> below).</li>\n  <li>After the user has consented, Google redirects them back to a page you specify. The code sample below assumes that you've whitelisted <code>http://localhost:3000/callback</code> as the callback url.</li>\n  <li>Google appends a query string to the callback url, e.g., <code>http://localhost:3000/callback?code=xxxx</code>. This code is needed to request an access token with <code>auth.getToken.&nbsp;</code></li>\n</ul>\n<pre><code class=\"language-js\"><span class=\"token keyword\">const</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'url'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> fetch <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'node-fetch'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> google <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'googleapis'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> OAuth2 <span class=\"token operator\">=</span> google<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>OAuth2\n<span class=\"token keyword\">const</span> gmail <span class=\"token operator\">=</span> google<span class=\"token punctuation\">.</span><span class=\"token function\">gmail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> version<span class=\"token punctuation\">:</span> <span class=\"token string\">'v1'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> credentials <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./credentials.json'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> auth <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OAuth2</span><span class=\"token punctuation\">(</span>\n   credentials<span class=\"token punctuation\">.</span>client_id<span class=\"token punctuation\">,</span>\n   credentials<span class=\"token punctuation\">.</span>client_secret<span class=\"token punctuation\">,</span>\n   credentials<span class=\"token punctuation\">.</span>redirect_uris<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> scopes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'https://mail.google.com/'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'https://www.googleapis.com/auth/gmail.compose'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'https://www.googleapis.com/auth/gmail.modify'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'https://www.googleapis.com/auth/gmail.send'</span>\n<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">// get access tokens from the \"code\" query parameter provided by Google</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getToken</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">auth<span class=\"token punctuation\">,</span> code</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  auth<span class=\"token punctuation\">.</span><span class=\"token function\">getToken</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> tokens</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>tokens<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createFetch</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">token<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> endpoint <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.googleapis.com'</span> <span class=\"token operator\">+</span> endpoint<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    method<span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n    headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      Authorization<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>token<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'google-api-nodejs-client/0.10.0'</span><span class=\"token punctuation\">,</span>\n      host<span class=\"token punctuation\">:</span> <span class=\"token string\">'www.googleapis.com'</span><span class=\"token punctuation\">,</span>\n      accept<span class=\"token punctuation\">:</span> <span class=\"token string\">'application/json'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resp</span> <span class=\"token operator\">=></span> resp<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/callback'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 2. After the user grants privileges to your application,</span>\n    <span class=\"token comment\">// Google will redirect them to an endpoint you specify. </span>\n    <span class=\"token comment\">// Next, use the code query parameter to request an access_token. </span>\n    <span class=\"token comment\">// This token can be be reused for up to a day. </span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> code <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> url<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> tokens <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getToken</span><span class=\"token punctuation\">(</span>auth<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">// 3. Now that we have tokens, we can fetch profile information</span>\n    <span class=\"token comment\">// associated with the Gmail account.</span>\n    <span class=\"token keyword\">const</span> endpoint <span class=\"token operator\">=</span> <span class=\"token string\">'/gmail/v1/users/me/profile'</span>\n    <span class=\"token keyword\">const</span> profile <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">createFetch</span><span class=\"token punctuation\">(</span>tokens<span class=\"token punctuation\">.</span>access_token<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> endpoint <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> \n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 1. Redirect user to url provided by generateAuthUrl</span>\n    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> auth<span class=\"token punctuation\">.</span><span class=\"token function\">generateAuthUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      access_type<span class=\"token punctuation\">:</span> <span class=\"token string\">'offline'</span><span class=\"token punctuation\">,</span>\n      scope<span class=\"token punctuation\">:</span> scopes\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">writeHead</span><span class=\"token punctuation\">(</span><span class=\"token number\">302</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token string\">'Location'</span><span class=\"token punctuation\">:</span> url <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span>\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h2>Fetching A List of Emails</h2>\n<p>So far we haven't done anything fancy. Now that we have an access_token we can fetch a list of emails:</p>\n<pre><code class=\"language-js\"><span class=\"token comment\">// pseudocode below</span>\n<span class=\"token keyword\">let</span> <span class=\"token constant\">BASE_URI</span> <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.googleapis.com'</span>\n<span class=\"token keyword\">let</span> messagesEndpoint <span class=\"token operator\">=</span> <span class=\"token string\">'/gmail/v1/users/me/messages'</span>\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">BASE_URI</span> <span class=\"token operator\">+</span> messagesEndpoint<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    method<span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n    headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      Authorization<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>token<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'google-api-nodejs-client/0.10.0'</span><span class=\"token punctuation\">,</span>\n      host<span class=\"token punctuation\">:</span> <span class=\"token string\">'www.googleapis.com'</span><span class=\"token punctuation\">,</span>\n      accept<span class=\"token punctuation\">:</span> <span class=\"token string\">'application/json'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resp</span> <span class=\"token operator\">=></span> resp<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resp</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// { messages: ['1641febef6e6b8a1', '16420ce2f95226e5'] }</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>As you might expect, the request to /gmail/v1/users/me/messages returns a list of message IDs corresponding to emails.</p>\n<p>We can then fetch the actual content of emails and metadata as follows:</p>\n<pre><code class=\"language-js\"><span class=\"token keyword\">let</span> <span class=\"token constant\">BASE_URI</span> <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.googleapis.com'</span>\n<span class=\"token keyword\">let</span> messageEndpoint <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/gmail/v1/users/me/messages/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?format=full</span><span class=\"token template-punctuation string\">`</span></span> <span class=\"token comment\">// id comes from the previous code snippet</span>\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">BASE_URI</span> <span class=\"token operator\">+</span> messageEndpoint<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    method<span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n    headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      Authorization<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bearer </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>token<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'google-api-nodejs-client/0.10.0'</span><span class=\"token punctuation\">,</span>\n      host<span class=\"token punctuation\">:</span> <span class=\"token string\">'www.googleapis.com'</span><span class=\"token punctuation\">,</span>\n      accept<span class=\"token punctuation\">:</span> <span class=\"token string\">'application/json'</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resp</span> <span class=\"token operator\">=></span> resp<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resp</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// {</span>\n      <span class=\"token comment\">//   \"id\": \"...\", </span>\n      <span class=\"token comment\">//   \"threadId\": \"...\",</span>\n      <span class=\"token comment\">//   \"snippet\": \"\", </span>\n      <span class=\"token comment\">//   \"headers\": [...],</span>\n      <span class=\"token comment\">//   \"payload\": {</span>\n      <span class=\"token comment\">//     \"parts\": [{</span>\n      <span class=\"token comment\">//        \"partId\": \"0\",</span>\n      <span class=\"token comment\">//        \"mimeType\": \"text/plain\",</span>\n      <span class=\"token comment\">//        \"filename\": \"\",</span>\n      <span class=\"token comment\">//        \"headers\": [</span>\n      <span class=\"token comment\">//          {</span>\n      <span class=\"token comment\">//            \"name\": \"Content-Type\",</span>\n      <span class=\"token comment\">//            \"value\": \"text/plain; charset=utf-8\"</span>\n      <span class=\"token comment\">//          },</span>\n      <span class=\"token comment\">//          {</span>\n      <span class=\"token comment\">//            \"name\": \"Content-Transfer-Encoding\",</span>\n      <span class=\"token comment\">//            \"value\": \"quoted-printable\"</span>\n      <span class=\"token comment\">//          }</span>\n      <span class=\"token comment\">//        ],</span>\n      <span class=\"token comment\">//        \"body\": {</span>\n      <span class=\"token comment\">//          \"size\": 747,</span>\n      <span class=\"token comment\">//          \"data\": \"SGV5IHdoYXQncyBjb29raW4nIGdvb2QgbG9va2luJz8=\"</span>\n      <span class=\"token comment\">//        }</span>\n      <span class=\"token comment\">//      }]</span>\n      <span class=\"token comment\">//   } </span>\n      <span class=\"token comment\">// }</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    </code></pre>\n<p>Note that the response shown in the above snippet is abbreviated. The Gmail API also includes other data like the timestamp and such. </p>\n<p>The aspect of the response that requires transformation is payload.parts[n].body.data. The body is base64-encoded binary data.</p>\n<h2>Decoding Raw Base64-Encoded Binary Messages</h2>\n<p>If we make the same request as the code snippet above but instead specify the format \"raw\" you'll receive a response that looks vaguely like the following. The format is specified as a query parameter, e.g., https://www.googleapis.com/gmail/v1/users/me/messages/${id}?format=full.</p>\n<pre><code class=\"language-js\"><span class=\"token punctuation\">{</span>  \n  id<span class=\"token punctuation\">:</span> <span class=\"token string\">'16441d1cdc8c73f9'</span><span class=\"token punctuation\">,</span>\n  threadId<span class=\"token punctuation\">:</span> <span class=\"token string\">'16441d1cdc8c73f9'</span><span class=\"token punctuation\">,</span>\n  labelIds<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'UNREAD'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'CATEGORY_PERSONAL'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'INBOX'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  snippet<span class=\"token punctuation\">:</span> <span class=\"token string\">'Hey what\\'s up?'</span>'<span class=\"token punctuation\">,</span>\n  historyId<span class=\"token punctuation\">:</span> <span class=\"token string\">'9714321'</span><span class=\"token punctuation\">,</span>\n  internalDate<span class=\"token punctuation\">:</span> <span class=\"token string\">'1530112624000'</span><span class=\"token punctuation\">,</span>\n  sizeEstimate<span class=\"token punctuation\">:</span> <span class=\"token number\">13035</span><span class=\"token punctuation\">,</span>\n  raw<span class=\"token punctuation\">:</span> <span class=\"token string\">'SGV5IHdoYXQncyBjb29raW4nIGdvb2QgbG9va2luJz8='</span>\n <span class=\"token punctuation\">}</span>\n </code></pre>\n<p>If you're after the actual content of emails, it is easier to work with the raw format rather than full, because the full format segments the payload.</p>\n<p>On the client side, we can decode the raw body with atob: </p>\n<pre><code class=\"language-js\"><span class=\"token keyword\">let</span> text <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">atob</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SGV5IHdoYXQncyBjb29raW4nIGdvb2QgbG9va2luJz8='</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// what's cookin' good lookin'</span>\n</code></pre>\n<p>On the server, you'll need to use a third-party package that duplicates this functionality like the aptly named btoa.</p>\n<pre><code class=\"language-js\"><span class=\"token keyword\">let</span> text <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bota'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SGV5IHdoYXQncyBjb29raW4nIGdvb2QgbG9va2luJz8='</span><span class=\"token punctuation\">)</span></code></pre>\n<p> </p>"}}}}