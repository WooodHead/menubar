{"componentChunkName":"component---src-components-post-tsx","path":"/graphcool-vs-firebase","result":{"pageContext":{"post":{"id":"cjeqgfr4snmwz01673m8l4i51","title":"Graph.Cool vs Firebase","slug":"graphcool-vs-firebase","published_at":"2018-10-07T04:00:00","created_at":"2018-03-14T02:16:39","encoded_html":"PHA+SSd2ZSB1c2VkIGJvdGggR3JhcGguQ29vbCBhbmQgRmlyZWJhc2UuIEd1ZXNzIHdoYXQ/IFRoZXkncmUgYm90aCBncmVhdCBwcm9kdWN0cy48L3A+CjxoMj5HcmFwaC5Db29sIHZzIEZpcmViYXNlPC9oMj4KPHA+RmlyZWJhc2UgaXMgYSBub1NRTCBiYWNrZW5kLWFzLWEtc2VydmljZSAoQkFBUykuIFRoZSB2YWx1ZSBwcm9wb3NpdGlvbiBvZiBGaXJlYmFzZSBpcyB0aGF0IGR1cmluZyBhcHAgZGV2ZWxvcG1lbnQgeW91IGNhbiBwbHVnIGluIEZpcmViYXNlIGFuZCBmb3JnZXQgYWJvdXQgYmFjay1lbmQgZGV2ZWxvcG1lbnQuPC9wPgo8cD5IZXJlJ3MgaG93IHlvdSBtaWdodCBxdWVyeSB5b3VyIEZpcmViYXNlIGRhdGFiYXNlIHRvIGdldCBhIHVzZXIncyBpbmZvcm1hdGlvbjo8L3A+CjxwcmU+PGNvZGUgY2xhc3M9Imxhbmd1YWdlLWpzIj48c3BhbiBjbGFzcz0idG9rZW4ga2V5d29yZCI+Y29uc3Q8L3NwYW4+IGFkbWluIDxzcGFuIGNsYXNzPSJ0b2tlbiBvcGVyYXRvciI+PTwvc3Bhbj4gPHNwYW4gY2xhc3M9InRva2VuIGZ1bmN0aW9uIj5yZXF1aXJlPC9zcGFuPjxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+KDwvc3Bhbj48c3BhbiBjbGFzcz0idG9rZW4gc3RyaW5nIj4nZmlyZWJhc2UtYWRtaW4nPC9zcGFuPjxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+KTwvc3Bhbj4KPHNwYW4gY2xhc3M9InRva2VuIGtleXdvcmQiPmNvbnN0PC9zcGFuPiA8c3BhbiBjbGFzcz0idG9rZW4gZnVuY3Rpb24iPmdldFVzZXJEYXRhPC9zcGFuPjxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+KDwvc3Bhbj48c3BhbiBjbGFzcz0idG9rZW4gcGFyYW1ldGVyIj51aWQ8L3NwYW4+PHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj4pPC9zcGFuPiA8c3BhbiBjbGFzcz0idG9rZW4gb3BlcmF0b3IiPj0+PC9zcGFuPiBhZG1pbjxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+Ljwvc3Bhbj48c3BhbiBjbGFzcz0idG9rZW4gZnVuY3Rpb24iPmRhdGFiYXNlPC9zcGFuPjxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+KDwvc3Bhbj48c3BhbiBjbGFzcz0idG9rZW4gcHVuY3R1YXRpb24iPik8L3NwYW4+CiAgPHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj4uPC9zcGFuPjxzcGFuIGNsYXNzPSJ0b2tlbiBmdW5jdGlvbiI+cmVmPC9zcGFuPjxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+KDwvc3Bhbj51c2VyczxzcGFuIGNsYXNzPSJ0b2tlbiBvcGVyYXRvciI+Lzwvc3Bhbj4kPHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj57PC9zcGFuPnVpZDxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+fTwvc3Bhbj48c3BhbiBjbGFzcz0idG9rZW4gcHVuY3R1YXRpb24iPik8L3NwYW4+CiAgPHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj4uPC9zcGFuPjxzcGFuIGNsYXNzPSJ0b2tlbiBmdW5jdGlvbiI+b25jZTwvc3Bhbj48c3BhbiBjbGFzcz0idG9rZW4gcHVuY3R1YXRpb24iPig8L3NwYW4+PHNwYW4gY2xhc3M9InRva2VuIHN0cmluZyI+J3ZhbHVlJzwvc3Bhbj48c3BhbiBjbGFzcz0idG9rZW4gcHVuY3R1YXRpb24iPik8L3NwYW4+CiAgPHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj4uPC9zcGFuPjxzcGFuIGNsYXNzPSJ0b2tlbiBmdW5jdGlvbiI+dGhlbjwvc3Bhbj48c3BhbiBjbGFzcz0idG9rZW4gcHVuY3R1YXRpb24iPig8L3NwYW4+PHNwYW4gY2xhc3M9InRva2VuIHBhcmFtZXRlciI+c25hcDwvc3Bhbj4gPHNwYW4gY2xhc3M9InRva2VuIG9wZXJhdG9yIj49Pjwvc3Bhbj4gc25hcDxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+Ljwvc3Bhbj48c3BhbiBjbGFzcz0idG9rZW4gZnVuY3Rpb24iPnZhbDwvc3Bhbj48c3BhbiBjbGFzcz0idG9rZW4gcHVuY3R1YXRpb24iPig8L3NwYW4+PHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj4pPC9zcGFuPjwvY29kZT48L3ByZT4KPHA+VGhlbiB5b3UnZCBjYWxsIGdldFVzZXJEYXRhKHVpZCksIHN1cHBseWluZyB0aGUgdXNlcidzIGlkIGFzIGFuIGFyZ3VtZW50LjwvcD4KPGgyPlNpZGUtQnkgU2lkZSBDb21wYXJpc29uPC9oMj4KPHA+TXkgcGVyc29uYWwgb3BpbmlvbiBpcyB0aGF0IEZpcmViYXNlIGlzIHBlcmZlY3QgZm9yIHByb3RvdHlwaW5nIGJ1dCBhdCBzY2FsZSBjYW4gYmVjb21lIHByb2hpYml0aXZlbHkgZXhwZW5zaXZlLjwvcD4KPHA+SSdtIGEgbGl0dGxlIGJpYXNlZCB0b3dhcmQgR3JhcGguQ29vbCBiZWNhdXNlIGl0IGNvbXBsaW1lbnRzIFJlYWN0IG5pY2VseS48L3A+CjxwPkZpcmViYXNlIGlzIGJldHRlciB0aGFuIEdyYXBoLkNvb2wgZm9yIHByb3RvdHlwaW5nIGJlY2F1c2UgcmVhbC10aW1lLCBhbmQgYXV0aG9yaXphdGlvbiBjb21lIGJha2VkIGluLiBXaXRoIEdyYXBoUUwsIHlvdSBuZWVkIHRvIGludGVncmF0ZSB3aXRoIEF1dGgwIGFuZCBzZXR1cCBzdWJzY3JpcHRpb25zLiBUaGUgdXBzaWRlIGlzIHRoYXQgeW91IGhhdmUgbW9yZSBjb250cm9sIHdpdGggR3JhcGguQ29vbCBhbmQgcGVyZm9ybWFuY2UgaXMgYmV0dGVyLjwvcD4KPGgzPkFkdmFudGFnZXMgb2YgRmlyZWJhc2U8L2gzPgo8cD5GaXJlYmFzZSB3YXMgbGF1bmNoZWQgaW4gQXByaWwgMjAxMiwgc28gaXQncyBiZWVuIGFyb3VuZCBmb3IgYSB3aGlsZS4gSXQgd2FzIGFjcXVpcmVkIGJ5IEdvb2dsZSBpbiAyMDE0LCBhbmQgaXNuJ3QgZ29pbmcgYW55d2hlcmUgYW55dGltZSBzb29uLjwvcD4KPHA+QWRkaW5nIEZpcmViYXNlIHRvIHlvdXIgYXBwIHNvbHZlcyB0aHJlZSBiaWcgb2JzdGFjbGVzIGluIG9uZSBzd29vcDo8L3A+Cjx1bD4KICA8bGk+QXV0aG9yaXphdGlvbjwvbGk+CiAgPGxpPkRhdGFiYXNlPC9saT4KICA8bGk+Q2xvdWQgZnVuY3Rpb25zPC9saT4KPC91bD4KPHA+QWRkaW5nIEZpcmViYXNlIHRvIGEgc2luZ2xlLXBhZ2UgYXBwbGljYXRpb24gKFNQQSkgYnVpbHQgd2l0aCBSZWFjdCBvciBBbmd1bGFyIGlzIHN0cmFpZ2h0Zm9yd2FyZCBhbmQgd2VsbC1kb2N1bWVudGVkLjwvcD4KPHA+RmlyZWJhc2Ugc3VwcG9ydHMgd2ViIHNvY2tldHMsIHdoaWNoIGFsbG93cyB5b3VyIHVwIHRvIGJlIHVwZGF0ZWQgaW4gcmVhbCB0aW1lLiBGb3IgZXhhbXBsZSwgaWYgeW91J3JlIHVzaW5nIFJlYWN0IHlvdSBjYW4ganVzdCBpbXBvcnQgcmVhY3QtZmlyZSBhbmQgdXNlIHRoZSBzeW50YXggZmlyZWJhc2UuZGF0YWJhc2UoKS5yZWYoKS5vbigidmFsdWUiKS48L3A+CjxoMz5EaXNhZHZhbnRhZ2VzIG9mIEZpcmViYXNlPC9oMz4KPHVsPgogIDxsaT5WZW5kb3IgbG9jay1pbjwvbGk+CiAgPGxpPk5lc3RlZCBxdWVyaWVzIGFuZCBtdXRhdGlvbnMgYXJlIGluZmVyaW9yIHRvIEdyYXBoUUw8L2xpPgogIDxsaT5DYW4gY29udHJpYnV0ZSB0byBzcGFnaGV0dGkgY29kZTwvbGk+CjwvdWw+CjxoMj5XaHkgR3JhcGguQ29vbD88L2gyPgo8cD5HcmFwaC5Db29sIGlzIGEgR3JhcGhRTCBiYWNrZW5kIGZvciB5b3VyIGFwcC4gSWYgeW91J3JlIG5vdCBmYW1pbGlhciB3aXRoIEdyYXBoUUwsIGl0IHdhcyBkZXZlbG9wZWQgYnkgRmFjZWJvb2sgdG8gY29tcGxpbWVudCBSZWFjdC48L3A+CjxwPkdyYXBoUUwgc29sdmVzIHRoZSBwcm9ibGVtIG9mIG5lc3RlZCByZXF1ZXN0cy4gTGV0J3Mgc2F5IHlvdSB3YW50IHRvIGRpc3BsYXkgYSB1c2VyJ3MgcG9zdHMgaW4gdGhlaXIgcHJvZmlsZS4gVG8gZ2V0IHRoaXMgaW5mb3JtYXRpb24sIHlvdSdkIG5lZWQgdG8gaXNzdWUgYSBnZXQgcmVxdWVzdCB0byAvdXNlci97dXNlcklkfSB3aGljaCBtaWdodCByZXR1cm46PC9wPgo8cHJlPjxjb2RlIGNsYXNzPSJsYW5ndWFnZS1qcyI+PHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj57PC9zcGFuPgogIG5hbWU8c3BhbiBjbGFzcz0idG9rZW4gb3BlcmF0b3IiPjo8L3NwYW4+IDxzcGFuIGNsYXNzPSJ0b2tlbiBzdHJpbmciPidTdGV2ZSc8L3NwYW4+PHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj4sPC9zcGFuPgogIGVtYWlsPHNwYW4gY2xhc3M9InRva2VuIG9wZXJhdG9yIj46PC9zcGFuPiA8c3BhbiBjbGFzcz0idG9rZW4gc3RyaW5nIj4nc3RldmVAYXBwbGUuY29tJzwvc3Bhbj48c3BhbiBjbGFzcz0idG9rZW4gcHVuY3R1YXRpb24iPiw8L3NwYW4+CiAgdWlkPHNwYW4gY2xhc3M9InRva2VuIG9wZXJhdG9yIj46PC9zcGFuPiA8c3BhbiBjbGFzcz0idG9rZW4gc3RyaW5nIj4neHh4Jzwvc3Bhbj48c3BhbiBjbGFzcz0idG9rZW4gcHVuY3R1YXRpb24iPiw8L3NwYW4+CiAgcG9zdHM8c3BhbiBjbGFzcz0idG9rZW4gb3BlcmF0b3IiPjo8L3NwYW4+IDxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+Wzwvc3Bhbj4KICAgPHNwYW4gY2xhc3M9InRva2VuIHN0cmluZyI+J2NqNWI1bnd6bDJsZTYwMTg0MmgzbmN0YmwnPC9zcGFuPjxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+LDwvc3Bhbj4KICAgPHNwYW4gY2xhc3M9InRva2VuIHN0cmluZyI+J2NqNWI1bnMyczJsY20wMTg0NmY0ZmJtdGonPC9zcGFuPgogIDxzcGFuIGNsYXNzPSJ0b2tlbiBwdW5jdHVhdGlvbiI+XTwvc3Bhbj4KPHNwYW4gY2xhc3M9InRva2VuIHB1bmN0dWF0aW9uIj59PC9zcGFuPjwvY29kZT48L3ByZT4KPHA+VGhlbiwgdG8gZ2V0IFN0ZXZlJ3MgcG9zdHMsIHlvdSdkIG5lZWQgdG8gbWFrZSBhIHJlcXVlc3QgdG8gL3Bvc3RzL3twb3N0SWR9LjwvcD4KPHA+VGhlIHBvaW50IGlzIHlvdSBtaWdodCBlbmQgdXAgbWFraW5nIDMtNSBHRVQgcmVxdWVzdHMgdG8gZ2V0IHRoZSBkYXRhIHRoYXQgeW91ciBjb21wb25lbnQgbmVlZHMuIFRoaXMgaXMgZXNwZWNpYWxseSB0cnVlIGlmIGdyb3VwcyBhcmUgaGlnaGx5IGludGVycmVsYXRlZC48L3A+CjxwPldpdGggR3JhcGhRTCwgeW91IGV4cGxpY2l0bHkgc3RhdGUgeW91ciBjb21wb25lbnRzIGRhdGEgcmVxdWlyZW1lbnRzLiBCdXQgeW91IGxlYXZlIHRoZSByZXN0IHRvIEdyYXBoUUwgdG8gcmVjb25jaWxlIGFsbCB0aGUgcmVxdWVzdHMgYW5kIGJ1bmRsZSB0aGVtIHRvZ2V0aGVyLiBXaXRoIEdyYXBoUUwsIHRoZSBzeW50YXggbG9va3MgbGlrZTo8L3A+CjxwPkluIHNob3J0LCBHcmFwaFFMIHJlYWxseSBzaGluZXMgd2l0aCBuZXN0ZWQgcXVlcmllcy48L3A+CjxoMj5NZXJpdHMgb2YgR3JhcGguQ29vbDwvaDI+CjxwPk5ldyBhbmQgc2hpbnkuPC9wPgo8cD5MZXNzIHZlbmRvciBsb2NrLWluLiBJZiBHcmFwaC5Db29sIGdvZXMgZGVmdW5jdCwgeW91IGNhbiBzZXQgdXAgeW91ciBvd24gR3JhcGhRTCBzZXJ2ZXIgdG8gdXNlIGFzIGEgYmFja2VuZCB3aXRob3V0IHJld29ya2luZyBmcm9udC1lbmQgY29kZS48L3A+CjxwPlN1cHBvcnRzIGJvdGggQXBvbGxvIChzaW1wbHkpIGFuZCBSZWxheS48L3A+CjxwPldvcmtzIGdyZWF0IHdpdGggUmVhY3QgKEFwb2xsbyBhbmQgUmVsYXkgYXJlIGtpbmQgb2YgbGlrZSBhIFJlZHV4IHN0b3JlIGNvbm5lY3RlZCByaWdodCB0byB0aGUgc2VydmVyKS48L3A+CjxoMj5EZW1lcml0cyBvZiBHcmFwaC5Db29sPC9oMj4KPHA+TmV3IGFuZCBzaGlueS48L3A+CjxwPk1vcmUgZGlmZmljdWx0IHRvIGludGVncmF0ZSB0aGFuIEZpcmViYXNlLjwvcD4=","excerpt":"I've used both Graph.Cool and Firebase. Guess what? They're both great products.","image":{"id":"hwusmsqgfojz437se14hn87fr","url":"static/cjeqgfr4snmwz01673m8l4i51/graphcool.png"},"posts_tags":[],"date":"10/07/2018","html":"<p>I've used both Graph.Cool and Firebase. Guess what? They're both great products.</p>\n<h2>Graph.Cool vs Firebase</h2>\n<p>Firebase is a noSQL backend-as-a-service (BAAS). The value proposition of Firebase is that during app development you can plug in Firebase and forget about back-end development.</p>\n<p>Here's how you might query your Firebase database to get a user's information:</p>\n<pre><code class=\"language-js\"><span class=\"token keyword\">const</span> admin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'firebase-admin'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> <span class=\"token function\">getUserData</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">uid</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> admin<span class=\"token punctuation\">.</span><span class=\"token function\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">ref</span><span class=\"token punctuation\">(</span>users<span class=\"token operator\">/</span>$<span class=\"token punctuation\">{</span>uid<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">once</span><span class=\"token punctuation\">(</span><span class=\"token string\">'value'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">snap</span> <span class=\"token operator\">=></span> snap<span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre>\n<p>Then you'd call getUserData(uid), supplying the user's id as an argument.</p>\n<h2>Side-By Side Comparison</h2>\n<p>My personal opinion is that Firebase is perfect for prototyping but at scale can become prohibitively expensive.</p>\n<p>I'm a little biased toward Graph.Cool because it compliments React nicely.</p>\n<p>Firebase is better than Graph.Cool for prototyping because real-time, and authorization come baked in. With GraphQL, you need to integrate with Auth0 and setup subscriptions. The upside is that you have more control with Graph.Cool and performance is better.</p>\n<h3>Advantages of Firebase</h3>\n<p>Firebase was launched in April 2012, so it's been around for a while. It was acquired by Google in 2014, and isn't going anywhere anytime soon.</p>\n<p>Adding Firebase to your app solves three big obstacles in one swoop:</p>\n<ul>\n  <li>Authorization</li>\n  <li>Database</li>\n  <li>Cloud functions</li>\n</ul>\n<p>Adding Firebase to a single-page application (SPA) built with React or Angular is straightforward and well-documented.</p>\n<p>Firebase supports web sockets, which allows your up to be updated in real time. For example, if you're using React you can just import react-fire and use the syntax firebase.database().ref().on(\"value\").</p>\n<h3>Disadvantages of Firebase</h3>\n<ul>\n  <li>Vendor lock-in</li>\n  <li>Nested queries and mutations are inferior to GraphQL</li>\n  <li>Can contribute to spaghetti code</li>\n</ul>\n<h2>Why Graph.Cool?</h2>\n<p>Graph.Cool is a GraphQL backend for your app. If you're not familiar with GraphQL, it was developed by Facebook to compliment React.</p>\n<p>GraphQL solves the problem of nested requests. Let's say you want to display a user's posts in their profile. To get this information, you'd need to issue a get request to /user/{userId} which might return:</p>\n<pre><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  name<span class=\"token operator\">:</span> <span class=\"token string\">'Steve'</span><span class=\"token punctuation\">,</span>\n  email<span class=\"token operator\">:</span> <span class=\"token string\">'steve@apple.com'</span><span class=\"token punctuation\">,</span>\n  uid<span class=\"token operator\">:</span> <span class=\"token string\">'xxx'</span><span class=\"token punctuation\">,</span>\n  posts<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n   <span class=\"token string\">'cj5b5nwzl2le601842h3nctbl'</span><span class=\"token punctuation\">,</span>\n   <span class=\"token string\">'cj5b5ns2s2lcm01846f4fbmtj'</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Then, to get Steve's posts, you'd need to make a request to /posts/{postId}.</p>\n<p>The point is you might end up making 3-5 GET requests to get the data that your component needs. This is especially true if groups are highly interrelated.</p>\n<p>With GraphQL, you explicitly state your components data requirements. But you leave the rest to GraphQL to reconcile all the requests and bundle them together. With GraphQL, the syntax looks like:</p>\n<p>In short, GraphQL really shines with nested queries.</p>\n<h2>Merits of Graph.Cool</h2>\n<p>New and shiny.</p>\n<p>Less vendor lock-in. If Graph.Cool goes defunct, you can set up your own GraphQL server to use as a backend without reworking front-end code.</p>\n<p>Supports both Apollo (simply) and Relay.</p>\n<p>Works great with React (Apollo and Relay are kind of like a Redux store connected right to the server).</p>\n<h2>Demerits of Graph.Cool</h2>\n<p>New and shiny.</p>\n<p>More difficult to integrate than Firebase.</p>"}}}}