{"componentChunkName":"component---src-components-post-tsx","path":"/minimum-viable-graphql-quickstart","result":{"pageContext":{"post":{"id":"cjeqgfe8znnly01991jo5xkxx","title":"Minimum Viable GraphQL QuickStart","slug":"minimum-viable-graphql-quickstart","published_at":"2018-01-01T21:34:50.595","created_at":"2018-03-14T02:16:23","encoded_html":"","excerpt":"Minimum Viable GraphQL QuickStart","image":{"id":"cjfxlqioz5gy50179rrqht749","url":"static/cjeqgfe8znnly01991jo5xkxx/graphcool-schema.png"},"posts_tags":[],"date":"01/01/2018","html":"<h2>Minimum Viable GraphQL QuickStart</h2>\n<p>We'll use React, GraphQL and Apollo to make a simple counter. We'll also use Graph.Cool as our hosted GraphQL backend. GraphCool is a GraphQL backend as a service, analogous to Firebase.</p>\n<h2>Why These Technologies?</h2>\n<p>GraphQL. GraphQL enables you to fetch exactly the data that you need from your database, no more or less. GraphQL let's you bundle nested requests into a single request. Instead of requesting users/{userId} and then posts/{postId} you request { users: { posts } } at once.</p>\n<p>Apollo. Apollo is the easiest way to get started with GraphQL. The alternative to Apollo is Relay. In this example, we'll be using apollo-react to build a simple React component that fetches and pushes data to our GraphQL database.</p>\n<p>GraphCool. GraphCool is analogous to Firebase. If you want to host your own GraphQL server that's fine - but GraphCool is great for prototyping. Unlike Firebase, there's no vendor lock-in with GraphCool. You can swap in an in-house solution later.</p>\n<h2>The Overall Strategy</h2>\n<p>If you're familiar with Redux and its syntax connect(mapStateToProps, mapDispatchToProps)(App), client-side graphQL won't be difficult for you to learn.</p>\n<p>Apollo has its own internal redux store. Apollo makes requests to your GraphQL server and intelligently updates it's internal store. Wrapping your React components with Apollo gives you access to Apollo's internal store.</p>\n<h2>GraphQL / Apollo Quick Start With Sample Project</h2>\n<p>This graphql-react-apollo is a minimum viable example of how you'd use Apollo and GraphQL, client-side. In this example we make a counter that keeps track of button clicks.</p>\n<p>Clone this sample project and and install dependencies:</p>\n<pre><code class=\"language-bash\"><span class=\"token function\">git</span> clone https://github.com/focuswish/graphql-react-apollo.git \n<span class=\"token builtin class-name\">cd</span> graphql-react-apollo\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span></code></pre>\n<img src=\"https://s3.amazonaws.com/contentkit/static/cjeqgfe8znnly01991jo5xkxx/graphcool-schema.png\" />\n<p>Create a GraphCool account (if you don't already have one). And be sure to install the GraphCool commandline interface. </p>\n<pre><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g graphcool\ngraphcool auth <span class=\"token comment\"># login</span></code></pre>\n<p>A new GraphCool project comes with User and File schema by default. We're going to initialize a new GraphCool project that adds a Counter schema:</p>\n<p>From graphql-react-apollo issue the following;</p>\n<pre><code class=\"language-bash\">graphcool init\nhttps://raw.githubusercontent.com/focuswish/graphql-react-apollo/master/example.graphql</code></pre>\n<p>The URI after 'graphcool init' points to schema for a new type, Counter:</p>\n<pre><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Counter</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">count</span><span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>If initializing the new GraphCool project is successful, you should see a Simple and Relay API URI printed in the console that looks something like:</p>\n<pre><code class=\"language-bash\">Simple API:   https://api.graph.cool/simple/v1/cj5d82p4jmjg90127sqeiu4kg\nRelay API:    https://api.graph.cool/relay/v1/cj5d82p4jmjg90127sqeiu4kg</code></pre>\n<p>You can also access your simple and relay API URIs from the GraphCool Console.</p>\n<p>Copy + paste the Simple API URI into src/index.js as follows:</p>\n<pre><code class=\"language-js\"><span class=\"token keyword\">const</span> networkInterface <span class=\"token operator\">=</span> <span class=\"token function\">createNetworkInterface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  uri<span class=\"token operator\">:</span> <span class=\"token string\">'https://api.graph.cool/simple/v1/cj5d82p4jmjg90127sqeiu4kg'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Start the server:</p>\n<pre><code class=\"language-bash\"><span class=\"token function\">npm</span> run dev</code></pre>\n<h2>Apollo / GraphQL Quick Start From Scratch</h2>\n<p>Let's start with a new project from scratch.</p>\n<p>First we'll setup Apollo client.</p>\n<pre><code class=\"language-bash\"><span class=\"token function\">mkdir</span> my-app <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> my-app\n<span class=\"token function\">npm</span> i react-apollo react react-dom --save</code></pre>\n<pre><code class=\"language-bash\">// App.js\n<span class=\"token function\">import</span> React from <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">import</span> ReactDOM from <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">import</span> <span class=\"token punctuation\">{</span>createNetworkInterface, ApolloClient, ApolloProvider<span class=\"token punctuation\">}</span> from <span class=\"token string\">'react-apollo'</span><span class=\"token punctuation\">;</span>\nconst networkInterface <span class=\"token operator\">=</span> createNetworkInterface<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  uri: <span class=\"token string\">'https://api.graph.cool/simple/v1/cj5d82p4jmjg90127sqeiu4kg'</span>,\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconst client <span class=\"token operator\">=</span> new ApolloClient<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>networkInterface<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n// Wrap our root component <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App /<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>ApolloProvider<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/ApolloProvider<span class=\"token operator\">></span>\nReactDOM.render<span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>ApolloProvider <span class=\"token assign-left variable\">client</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>client<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>App /<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>/ApolloProvider<span class=\"token operator\">></span>,\n  document.getElementById<span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre>\n<p>Let's create a simple root component. We initialized the GraphCool project with sample schema for a counter. This sample schema only had one field, \"count\":</p>\n<pre><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Counter</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">count</span><span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Int is one of the primitative types. The exclaimation mark means that this field is non-nullable.</p>\n<p>When you initialized this new GraphCool project, you provided a URL to the above schema. GraphCool automatically added some fields (ID, createdAt, and UpdatedAt).</p>\n<pre><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Counter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Node</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">count</span><span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">createdAt</span><span class=\"token punctuation\">:</span> DateTime<span class=\"token operator\">!</span>\n  <span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span> <span class=\"token directive function\">@isUnique</span>\n  <span class=\"token attr-name\">updatedAt</span><span class=\"token punctuation\">:</span> DateTime<span class=\"token operator\">!</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>Since we haven't populated our container with data yet, we'll make a button that creates a new counter.</p>\n<pre><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>createCounter<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span> <span class=\"token function\">createCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Create counter<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre>\n<p>Just like with redux, we'll pass a createCounter() prop to our <App /> component. When the onClick() event handler fires, a new node will be created in our GrahCool backend (a node belonging to the Counter type).</p>\n<p>The syntax looks like this:</p>\n<pre><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>graphql<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-apollo'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> createCounter <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  mutation createCounter(\n    $count: Int!\n  ) {\n    createCounter(\n      count: $count\n    ) {\n      count\n      id\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token keyword\">const</span> AppWithData <span class=\"token operator\">=</span> <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span>createCounter<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> mutate <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">createCounter</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">mutate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>variables<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> count <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span></code></pre>\n<p>Note that we've named our mutation 'createCounter.' This can be a useful heuristic, but naming mutations and queries isn't necessary. The state of affairs is analogous to javascript where you can write anonymous or named functions, e.g., () => {...} or function namedFunction() {...}.</p>\n<h2>Mutation Syntax</h2>\n<p>A mutation is anything that mutates a node, like creating, updating, or deleting nodes. We use queries to read data.</p>\n<p>Mutation syntax looks like:</p>\n<pre><code class=\"language-graphql\"><span class=\"token comment\"># name our mutation</span>\n<span class=\"token keyword\">mutation</span> createCounter<span class=\"token punctuation\">(</span>\n    <span class=\"token comment\"># The count should be an integer (int)</span>\n    <span class=\"token comment\"># The exclaimation-mark (!) means that $count is a required field</span>\n    <span class=\"token variable\">$count</span><span class=\"token punctuation\">:</span> Int<span class=\"token operator\">!</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    createCounter<span class=\"token punctuation\">(</span>\n      <span class=\"token comment\"># Pass $count as a variable</span>\n      <span class=\"token attr-name\">count</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$count</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\"># The values we want this mutation to return</span>\n    <span class=\"token comment\"># We could also return createdAt, updatedAt</span>\n    count\n    id\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>We could also add a default value to the count field with:</p>\n<pre><code class=\"language-graphql\"><span class=\"token keyword\">mutation</span> createCounter<span class=\"token punctuation\">(</span><span class=\"token variable\">$count</span><span class=\"token punctuation\">:</span> Int <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></code></pre>\n<p>This syntax is similar to ES6 parameter defaults, e.g., createCounter(count = 0)</p>\n<h2>Interfacing With React Components</h2>\n<p>Once again, we're using react-apollo to interface with GraphQL on the client-side.</p>\n<pre><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>createNetworkInterface<span class=\"token punctuation\">,</span> ApolloClient<span class=\"token punctuation\">,</span> ApolloProvider<span class=\"token punctuation\">,</span> graphql<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-apollo'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>createCounter<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span> <span class=\"token function\">createCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>count<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Create counter<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> createCounter <span class=\"token operator\">=</span> gql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  mutation createCounter(\n    $count: Int!\n  ) {\n    createCounter(\n      count: $count\n    ) {\n      count\n      id\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token keyword\">const</span> AppWithData <span class=\"token operator\">=</span> <span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span>createCounter<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> mutate <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">createCounter</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>count<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">mutate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>variables<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> count <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> networkInterface <span class=\"token operator\">=</span> <span class=\"token function\">createNetworkInterface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  uri<span class=\"token operator\">:</span> <span class=\"token string\">'https://api.graph.cool/simple/v1/cj5d82p4jmjg90127sqeiu4kg'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApolloClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>networkInterface<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>ApolloProvider client<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>client<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>AppWithData <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ApolloProvider<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre>\n<h2>GraphQL Queries</h2>\n<p>GraphQL really shines with queries. That's because GraphQL empowers us to ask for only the data that we need. Nested queries are a breeze so we don't need to make multiple roundtrips to the server to gain access to a deeply nested edge.</p>\n<img src=\"https://s3.amazonaws.com/contentkit/static/cjeqgfe8znnly01991jo5xkxx/anatomy-of-graphql-query-1.png\" />\n<img src=\"https://s3.amazonaws.com/contentkit/static/cjeqgfe8znnly01991jo5xkxx/anatomy-of-graphql-query-2.png\" />\n<p>With GraphCool, you can query all nodes of a certain type with all{Nodes}. For example, if you want to query all of the records of type User, we invoke allUsers.</p>\n<p>To query a specific node, you pass an ID as a variable.</p>\n<p>Some GraphQl nomenclature:</p>\n<ul>\n  <li>a <strong>node</strong> must return either a Scalar, Enum, Object, Interface, Union or a Non-Null wrapper around one of these types. Nodes cannot return a list.&nbsp;</li>\n  <li>an edge connects two nodes together. Edges must contain a <strong>node</strong> field, and a cursor field (for pagination). This cursor field returns a type that serializes as a String; this may be a String, a non-null wrapper around a String, a custom scalar that serializes as a String, or a non-null wrapper around a custom scalar that serializes as a String.</li>\n</ul>"}}}}